"""
Django settings for safeReg project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

#Django environ package
import environ

env = environ.Env()
environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('THE_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False #remeber to change to False

ALLOWED_HOSTS = [
    'localhost',  
    '',
    'safereg.onrender.com',  
]


# Application definition

INSTALLED_APPS = [
   'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'secureReg', #security features
    
    'crispy_forms',
    'crispy_bootstrap5',
    
    'django_recaptcha',
    
    'django_otp',
    'django_otp.plugins.otp_static',
    'django_otp.plugins.otp_totp',
    'two_factor',
    
    'axes', # druteforcw attacks
    
]

CRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap5'
CRISPY_TEMPLATE_PACK = 'bootstrap5'

#reCAPTCHA keys
RECAPTCHA_PUBLIC_KEY = env('RC_PUBLIC_K')
RECAPTCHA_PRIVATE_KEY = env('RC_PRIVATE_K') 

# 2FA
LOGIN_URL = 'two_factor:login'
LOGIN_REDIRECT_URL = 'dashboard'

AUTHENTICATION_BACKENDS = [
    # AxesStandaloneBackend should be the first backend in the AUTHENTICATION_BACKENDS list.
    'axes.backends.AxesStandaloneBackend',

    # Django ModelBackend is the default authentication backend.
    'django.contrib.auth.backends.ModelBackend',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    
    'django_otp.middleware.OTPMiddleware', # 2FA
    
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    'django_auto_logout.middleware.auto_logout', # Auto-logout
    
    'axes.middleware.AxesMiddleware', #Bruteforce
]

ROOT_URLCONF = 'safeReg.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                
                'django_auto_logout.context_processors.auto_logout_client', # Auto-logout
            ],
        },
    },
]

WSGI_APPLICATION = 'safeReg.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Johannesburg'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = 'SafeReg/safeReg/static'

STATICFILES_DIRS = [BASE_DIR / 'static']

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#Auto-logout
from datetime import timedelta

AUTO_LOGOUT = {
    'IDLE_TIME': timedelta(minutes=5),
    'REDIRECT_TO_LOGIN_IMMEDIATELY': True,
    'MESSAGE': 'The session has expired. Please login again to continue.',
}

# Brute-Force config
AXES_FAILURE_LIMIT: 3 # number of login-fail
AXES_COOLOF_TIME: 2 #nombers of hours before re-attempt
AXES_RESET_ON_SUCCESS = True # reset failed attempts
AXES_LOCKOUT_TEMPLATE = 'account-locked.html' #add own temp

#Additional funct
AXES_LOCKOUT_PARAMETERS = ["username"]

# SMTP configuration

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = '587'
EMAIL_USE_TLS = 'True'

EMAIL_HOST_USER = 'saferegreset@gmail.com' # - GMAIL email address
EMAIL_HOST_PASSWORD = env('E_HOST_P') # - APP password
DEFAULT_FROM_EMAIL = 'saferegreset@gmail.com' # - GMAIL email address

# Pre-deployment security options


#predeployment command : python manage.py check --deploy
#CSRF protection

SESSION_COOKIE_SECURE = True
CSRF_COOKIES_SECURE = True
CSRF_COOKIE_SECURE = True

# SSL redirect

SECURE_SSL_REDIRECT = True #depends if loadbalancer available

 #Enable HSTS # for man in the middle attcks

SECURE_HSTS_SECONDS = 86400
SECURE_HSTS_PRELOAD = True
SECURE_HSTS_INCLUDE_SUBDOMAINS = True


# Look into a CSP (Content Security Policy)
